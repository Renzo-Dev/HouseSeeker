import dotenv from 'dotenv'
import {Scenes, session, Telegraf} from 'telegraf'
import commands from './commands/commands.js'
import {clearPendingUpdates} from './utils/helpers.js'
import dataWizard from './scenes/dataWizard.js'
import startScene from './scenes/startScene.js'

dotenv.config()

const bot = new Telegraf(process.env.BOT_TOKEN)
let stage = new Scenes.Stage([dataWizard, startScene])

// –ü–æ–¥–∫–ª—é—á–∞–µ–º middleware –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Å—Å–∏—è–º–∏ –∏ —Å—Ü–µ–Ω–∞–º–∏
bot.use(session())
bot.use(stage.middleware())

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
bot.telegram.setMyDescription(
	'üè° Welcome to RentBot! We help you find and apply for apartments.\n' +
	'üè° –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RentBot! –ú—ã –ø–æ–º–æ–≥–∞–µ–º –Ω–∞—Ö–æ–¥–∏—Ç—å –∏ –ø–æ–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –∞—Ä–µ–Ω–¥—É.\n' +
	'üè° ¬°Bienvenido a RentBot! Te ayudamos a encontrar y solicitar apartamentos.\n' +
	'üè° Willkommen bei RentBot! Wir helfen Ihnen, Wohnungen zu finden und sich zu bewerben.'
)

// –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
commands.forEach(({command, action}) => {
	bot.command(command, async (ctx) => {
		await action(ctx)
	})
})

console.log('‚úÖ –ö–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã\n')
commands.forEach(({command, action}) => {
	console.log(`üëâ –ö–æ–º–∞–Ω–¥–∞: /${command}`)
})
clearPendingUpdates()

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.launch()

bot.catch(async (err, ctx) => {
	if (err.response && err.response.error_code === 403) {
		console.log(`‚ùå –ë–æ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: ${ctx.from.id}`)
		await ctx.scene.leave()
	} else {
		console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –±–æ—Ç–µ:', err)
	}
})