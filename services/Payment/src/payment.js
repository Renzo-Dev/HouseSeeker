const express = require('express')
const crypto = require('crypto')
const axios = require('axios')

const app = express()
app.use(express.urlencoded({extended: true})) // –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ application/x-www-form-urlencoded

// –¢–≤–æ–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ FreeKassa
const SECRET_WORD_1 = '3N8S5M0W51}a3B?'
const SECRET_WORD_2 = 'F[StgfjD_LBi0,5'

// Telegram Bot API
const TELEGRAM_BOT_URL = 'http://localhost:3000/notify' // –∏–ª–∏ –≤–Ω–µ—à–Ω–∏–π –∞–¥—Ä–µ—Å —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç FreeKassa
// üì© Endpoint, –∫—É–¥–∞ FreeKassa –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–ø–ª–∞—Ç–µ
app.get('/freekassa/notify', async (req, res) => {
	const {
		MERCHANT_ID,     // ID –º–µ—Ä—á–∞–Ω—Ç–∞
		AMOUNT,          // –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã
		intid,           // ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
		P_EMAIL,         // Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π)
		SIGN,            // –ü–æ–¥–ø–∏—Å—å –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç FreeKassa
		us_telegram_id   // üí¨ –ü–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –Ω–∞–º–∏ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	} = req.query
	
	// ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∏–≥–Ω–∞—Ç—É—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏
	const expectedSign = crypto.createHash('md5').update(
		`${MERCHANT_ID}:${AMOUNT}:${SECRET_WORD_2}:${intid}`
	).digest('hex')
	
	// üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∏
	if (SIGN !== expectedSign) {
		// ‚ùå –ü–æ–¥–ø–∏—Å—å –Ω–µ —Å–æ–≤–ø–∞–ª–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫—É –≤ –±–æ—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
		await axios.post(TELEGRAM_BOT_URL, {
			status: 'error',
			reason: '–ù–µ–≤–µ—Ä–Ω–∞—è –ø–æ–¥–ø–∏—Å—å',
			query: req.query
		}).catch(() => {
		})
		return res.status(400).send('Bad sign')
	}
	
	// ‚úÖ –ü–æ–¥–ø–∏—Å—å —Å–æ–≤–ø–∞–ª–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É—Å–ø–µ—à–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –±–æ—Ç–∞
	await axios.post(TELEGRAM_BOT_URL, {
		status: 'success',
		telegram_id: us_telegram_id || null,
		user: P_EMAIL || 'unknown',
		amount: AMOUNT,
		id: intid
	}).catch(() => {
	}) // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏, —á—Ç–æ–±—ã –Ω–µ —Å–ª–æ–º–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É FreeKassa
	
	// FreeKassa –æ–∂–∏–¥–∞–µ—Ç "YES" –∫–∞–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è
	res.send('YES')
})

// ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã (—Ä–µ–¥–∏—Ä–µ–∫—Ç –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã)
app.get('/freekassa/success', (req, res) => {
	res.send('–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!')
})

// ‚ùå –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–∞–∑–∞ –≤ –æ–ø–ª–∞—Ç–µ
app.get('/freekassa/fail', async (req, res) => {
	const {us_telegram_id} = req.query
	
	// –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±–æ—Ç–∞ –æ–± –æ—Ç–∫–∞–∑–µ
	await axios.post(TELEGRAM_BOT_URL, {
		status: 'fail',
		telegram_id: us_telegram_id || null,
		query: req.query
	}).catch(() => {
	})
	
	res.send('–û–ø–ª–∞—Ç–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å.')
})

// üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ 5000 –ø–æ—Ä—Ç—É
const PORT = 5000
app.listen(PORT, () => {
	console.log(`FreeKassa listener –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
})