version: '3.9'

services:
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./services/Nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./services/DBService/src/public:/var/www/public
    networks:
      - app_network
    depends_on:
      - meinet-rent-services

  meinet-rent-services:
    container_name: meinet-rent-services
    build:
      context: services/MeinetRent
      dockerfile: Dockerfile
    expose:
      - "4000"
    volumes:
      - ./services/MeinetRent/src:/app
    networks:
      - app_network

  immo-rent-services:
    container_name: immo-rent-services
    build:
      context: services/ImmoRent
      dockerfile: Dockerfile
    expose:
      - "6000"
    volumes:
      - ./services/ImmoRent/src:/app
    networks:
      - app_network

  tg_bot:
    build:
      context: bot
      dockerfile: Dockerfile
    container_name: telegram_BOT
    volumes:
      - ./bot:/app
    ports:
      - "3000:3000"
    networks:
      - app_network

  db_service:
    container_name: db_service
    build:
      context: ./services/DBService
      dockerfile: Dockerfile
    volumes:
      - ./services/DBService/src:/var/www/
    networks:
      - app_network

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local